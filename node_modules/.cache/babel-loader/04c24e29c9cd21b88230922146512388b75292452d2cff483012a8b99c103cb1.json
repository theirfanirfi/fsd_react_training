{"ast":null,"code":"var _jsxFileName = \"/Users/irfanullah/Desktop/fsdreact/src/components/StoreComponents/ProductForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useContext, useEffect } from 'react';\nimport { ProductContext } from '../../pages/MyStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductForm = () => {\n  _s();\n  const [productName, setProductName] = useState('');\n  const [productPrice, setProductPrice] = useState(0);\n  const {\n    products,\n    setProducts,\n    productIndexForUpdate,\n    setProductIndexForUpdate\n  } = useContext(ProductContext);\n  const productSold = e => {\n    if (productName != '' && productPrice != 0) {\n      let date = new Date();\n      let year = date.getFullYear();\n      let month = date.getMonth() + 1;\n      let day = date.getDate();\n      let product = {\n        'time': day + \"/\" + month + \"/\" + year,\n        'productName': productName,\n        'productPrice': productPrice\n      };\n      console.log(product);\n\n      // setTotalDailyPrice(totalDailyPrice+parseInt(productPrice));\n      // setTotalDailyProducts(totalDailyProducts+1)\n      setProducts([...products, product]);\n      setProductName('');\n      setProductPrice(0);\n    } else {\n      alert('Please enter product details');\n    }\n  };\n  const editProductInState = event => {\n    let prod = products[productIndexForUpdate];\n    let productUpdated = {\n      ...prod,\n      'productName': productName,\n      'productPrice': productPrice\n    };\n    let prods = products;\n    prods.splice(productIndexForUpdate, 1, productUpdated);\n    setProducts([...prods]);\n    // setIsEditing(false);\n    setProductName('');\n    setProductPrice(0);\n    setProductIndexForUpdate(-1);\n    // setProductUpdate({})\n  };\n  const initateProductUpdate = () => {\n    let prod = products[productIndexForUpdate];\n    setProductName(prod.productName);\n    setProductPrice(prod.productPrice);\n  };\n  useEffect(() => {\n    initateProductUpdate();\n  }, [productIndexForUpdate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Product Name: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Product Name\",\n      onChange: e => setProductName(e.target.value),\n      value: productName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Product Price: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Product Price\",\n      onChange: e => setProductPrice(parseInt(e.target.value)),\n      value: productPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginLeft: 4\n      },\n      onClick: productIndexForUpdate > -1 ? editProductInState : productSold,\n      children: productIndexForUpdate > -1 ? 'Edit Product' : 'Product Sold'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 21\n  }, this);\n};\n_s(ProductForm, \"JWjiY41SManbRqPHuPHmb06sTEA=\");\n_c = ProductForm;\nexport default ProductForm;\nvar _c;\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"names":["useState","useContext","useEffect","ProductContext","jsxDEV","_jsxDEV","ProductForm","_s","productName","setProductName","productPrice","setProductPrice","products","setProducts","productIndexForUpdate","setProductIndexForUpdate","productSold","e","date","Date","year","getFullYear","month","getMonth","day","getDate","product","console","log","alert","editProductInState","event","prod","productUpdated","prods","splice","initateProductUpdate","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","target","value","parseInt","style","marginLeft","onClick","_c","$RefreshReg$"],"sources":["/Users/irfanullah/Desktop/fsdreact/src/components/StoreComponents/ProductForm.js"],"sourcesContent":["import {useState, useContext, useEffect} from 'react';\nimport { ProductContext } from '../../pages/MyStore';\n\nconst ProductForm = () => {\n    const [productName, setProductName] = useState('');\n    const [productPrice, setProductPrice] = useState(0);\n    const {products, setProducts, productIndexForUpdate, setProductIndexForUpdate} = useContext(ProductContext);\n\n\n        const productSold = (e) => {\n        if(productName != '' && productPrice != 0){\n        let date =new Date();\n\n        let year = date.getFullYear();\n        let month = date.getMonth() + 1;\n        let day = date.getDate();\n\n        let product = {\n            'time': day+\"/\"+month+\"/\"+year,\n            'productName': productName,\n            'productPrice': productPrice\n        }\n        console.log(product);\n\n        // setTotalDailyPrice(totalDailyPrice+parseInt(productPrice));\n        // setTotalDailyProducts(totalDailyProducts+1)\n        setProducts([...products, product])\n        setProductName('')\n        setProductPrice(0)\n    }else {\n        alert('Please enter product details');\n    }\n    }\n\n\n        const editProductInState = (event) => {\n        let prod = products[productIndexForUpdate]\n\n        let productUpdated = {\n            ...prod,\n            'productName': productName, \n            'productPrice': productPrice, \n        }\n\n        let prods = products\n        prods.splice(productIndexForUpdate,1, productUpdated);\n        setProducts([...prods]);\n        // setIsEditing(false);\n        setProductName('')\n        setProductPrice(0)\n        setProductIndexForUpdate(-1)\n        // setProductUpdate({})\n    }\n\n\n\n    const initateProductUpdate = () => {\n        let prod = products[productIndexForUpdate]\n        setProductName(prod.productName)\n        setProductPrice(prod.productPrice)\n    }\n\n    useEffect(()=>{\n       initateProductUpdate()\n\n    }, [productIndexForUpdate])\n\n\n    return (\n                    <div>\n                <label>Product Name: </label>\n                <input type=\"text\" placeholder=\"Product Name\"\n                onChange={(e) => setProductName(e.target.value)}\n                value={productName}\n                />\n                \n                <label>Product Price: </label>\n                <input type=\"number\" placeholder=\"Product Price\"\n                onChange={(e) => setProductPrice(parseInt(e.target.value))}\n                value={productPrice}\n                />\n\n                <button style={{marginLeft:4}} onClick={productIndexForUpdate > -1 ? editProductInState : productSold}>\n                    {productIndexForUpdate > -1 ? 'Edit Product' : 'Product Sold'}\n                </button>\n                \n            </div>\n    )\n}\n\nexport default ProductForm"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}