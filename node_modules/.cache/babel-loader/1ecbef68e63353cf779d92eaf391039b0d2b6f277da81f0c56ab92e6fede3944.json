{"ast":null,"code":"var _jsxFileName = \"/Users/irfanullah/Desktop/fsdreact/src/pages/Todos.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Todos = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const get_all_todos = () => {\n    let url = \"https://jsonplaceholder.typicode.com/todos\";\n    fetch(url, {\n      method: \"GET\"\n    }).then(response => response.json()).then(res => {\n      setTodos(res);\n    });\n  };\n  useEffect(() => {\n    get_all_todos();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: todos.map(todo => {\n        /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/todo/${todo.id}}`,\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Todos, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n_c = Todos;\nexport default Todos;\nvar _c;\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["useState","useEffect","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Todos","_s","todos","setTodos","get_all_todos","url","fetch","method","then","response","json","res","children","fileName","_jsxFileName","lineNumber","columnNumber","map","todo","to","id","title","_c","$RefreshReg$"],"sources":["/Users/irfanullah/Desktop/fsdreact/src/pages/Todos.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Todos = () => {\n    const [todos, setTodos] = useState([])\n\n    const get_all_todos = () => {\n        let url = \"https://jsonplaceholder.typicode.com/todos\";\n        fetch(url, {\n            method: \"GET\"\n        }).then(response => response.json()).then(res => {\n            setTodos(res);\n        })\n    }\n\n    useEffect(() => {\n        get_all_todos();\n    })\n\n\n    return (\n        <>\n            <h1>My Todos</h1>\n            <ol>\n                {todos.map(todo => {\n                    <li>\n                        <Link to={`/todo/${todo.id}}`}>\n                            {todo.title}\n                        </Link>\n                    </li>\n\n                })}\n            </ol>\n        </>\n    )\n}\n\nexport default Todos;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAIC,GAAG,GAAG,4CAA4C;IACtDC,KAAK,CAACD,GAAG,EAAE;MACPE,MAAM,EAAE;IACZ,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAACF,IAAI,CAACG,GAAG,IAAI;MAC7CR,QAAQ,CAACQ,GAAG,CAAC;IACjB,CAAC,CAAC;EACN,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACZU,aAAa,CAAC,CAAC;EACnB,CAAC,CAAC;EAGF,oBACIP,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACIf,OAAA;MAAAe,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBnB,OAAA;MAAAe,QAAA,EACKV,KAAK,CAACe,GAAG,CAACC,IAAI,IAAI;QACf,aAAArB,OAAA;UAAAe,QAAA,eACIf,OAAA,CAACF,IAAI;YAACwB,EAAE,EAAE,SAASD,IAAI,CAACE,EAAE,GAAI;YAAAR,QAAA,EACzBM,IAAI,CAACG;UAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC;MAET,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA,eACP,CAAC;AAEX,CAAC;AAAAf,EAAA,CAhCKD,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AAkCX,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}