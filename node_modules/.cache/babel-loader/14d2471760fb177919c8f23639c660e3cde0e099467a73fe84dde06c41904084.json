{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\NAVTTC\\\\Server Side Task\\\\fsd_react_training\\\\src\\\\pages\\\\Todo.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Todo = () => {\n  _s();\n  const [todo, setTodo] = useState({});\n  const {\n    id\n  } = useParams();\n  const fetch_single_todo = () => {\n    let url = `https://jsonplaceholder.typicode.com/todos/${id}`;\n    fetch(url, {\n      method: \"GET\"\n    }).then(response => response.json()).then(res => {\n      setTodo(res);\n    });\n  };\n  useEffect(() => {\n    fetch_single_todo();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: todo.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Id: \", todo.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Complete: \", todo.completed ? \"Yes\" : \"No\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Todo, \"6R/6/53ijYBBM4RnjLtjgvuR+yo=\", false, function () {\n  return [useParams];\n});\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["useEffect","useState","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","_s","todo","setTodo","id","fetch_single_todo","url","fetch","method","then","response","json","res","children","title","fileName","_jsxFileName","lineNumber","columnNumber","completed","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/NAVTTC/Server Side Task/fsd_react_training/src/pages/Todo.js"],"sourcesContent":["import {useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom'\r\n\r\nconst Todo = () => {\r\n    const [todo, setTodo] = useState({})\r\n    const {id} = useParams()\r\n\r\n    const fetch_single_todo = () => {\r\n        let url = `https://jsonplaceholder.typicode.com/todos/${id}`\r\n        fetch(url, {\r\n            method: \"GET\"\r\n        })\r\n        .then(response => response.json())\r\n        .then(res => {\r\n            setTodo(res);\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetch_single_todo();\r\n    })\r\n\r\n\r\n    return (\r\n        <>\r\n        <h1>{todo.title}</h1>\r\n        <p>Id: {todo.id}</p>\r\n        <p>Complete: {todo.completed ? \"Yes\" : \"No\" }</p>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Todo;"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,SAAQC,SAAS,QAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM;IAACU;EAAE,CAAC,GAAGT,SAAS,CAAC,CAAC;EAExB,MAAMU,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAIC,GAAG,GAAG,8CAA8CF,EAAE,EAAE;IAC5DG,KAAK,CAACD,GAAG,EAAE;MACPE,MAAM,EAAE;IACZ,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,GAAG,IAAI;MACTT,OAAO,CAACS,GAAG,CAAC;IAChB,CAAC,CAAC;EACN,CAAC;EAEDnB,SAAS,CAAC,MAAI;IACVY,iBAAiB,CAAC,CAAC;EACvB,CAAC,CAAC;EAGF,oBACIR,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACAhB,OAAA;MAAAgB,QAAA,EAAKX,IAAI,CAACY;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBrB,OAAA;MAAAgB,QAAA,GAAG,MAAI,EAACX,IAAI,CAACE,EAAE;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBrB,OAAA;MAAAgB,QAAA,GAAG,YAAU,EAACX,IAAI,CAACiB,SAAS,GAAG,KAAK,GAAG,IAAI;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA,eAC/C,CAAC;AAGX,CAAC;AAAAjB,EAAA,CA5BKD,IAAI;EAAA,QAEOL,SAAS;AAAA;AAAAyB,EAAA,GAFpBpB,IAAI;AA8BV,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}